/**
 * This file was automatically generated by the Mule Development Kit
 */
package com.kss.sms;

import org.mule.api.annotations.Connector;

import java.net.*;
import java.io.*;

import org.mule.api.annotations.Connect;
import org.mule.api.annotations.ValidateConnection;
import org.mule.api.annotations.ConnectionIdentifier;
import org.mule.api.annotations.Disconnect;
import org.mule.api.annotations.display.Password;
import org.mule.api.annotations.display.Placement;
import org.mule.api.annotations.param.ConnectionKey;
import org.mule.api.annotations.param.*;
import org.mule.api.ConnectionException;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Processor;

/**
 * Cloud Connector
 *
 * @author MuleSoft, Inc.
 */
@Connector(name="bulksms", schemaVersion="1.0-SNAPSHOT")
public class BulkSMSConnector
{
	/**
     * Configurable
     */
	@Configurable
	@Placement(group = "Connection", tab = "General")
    private String Uname;
	 public String getUname() {
		return Uname;
	}



	public String getPass() {
		return Pass;
	}

	/**
     * Configurable
     */
	@Configurable
	@Optional
	@Default(value = "http://bulksms.vsms.net:5567/eapi/submission/send_sms/2/2.0")
	@Placement(group = "Connection", tab = "General")
    private String URL;

	public String getURL() {
		return URL;
	}



	public void setURL(String uRL) {
		URL = uRL;
	}



	/**
     * Set property
     *
     * @param UserName User Name
     */	
	public void setUname(String Uname)
    {
        this.Uname = Uname;
    }
	
	 /**
     * Configurable
     */
	@Configurable
	@Placement(group = "Connection", tab = "General")
	@Password	
    private String Pass;
	 /**
     * Set property
     *
     * @param Pass Password
     */	
	public void setPass(@Password String Pass)
    {
        this.Pass = Pass;
    }
	
	

    /**
     * Connect
     *
     
     * @throws ConnectionException
     */
    @Connect
    public void connect()
        throws ConnectionException {
        /*
         * CODE FOR ESTABLISHING A CONNECTION GOES HERE
         */
    	//this.setUname(username);
    }

    /**
     * Disconnect
     */
    @Disconnect
    public void disconnect() {
        /*
         * CODE FOR CLOSING A CONNECTION GOES HERE
         */
    }

    /**
     * Are we connected
     */
    @ValidateConnection
    public boolean isConnected() {
        return true;
    }

    /**
     * Connection identifier
     */
    @ConnectionIdentifier
    public String connectionId() {
        return "001";
    }

    /**
     * Custom message processor named SendMessage
     *
     * {@sample.xml ../../../doc/BulkSMS-connector.xml.sample bulksms:SendMessage}
     *
     * @param content Content to be processed
     * @param no phone no to be sent
     * @return Some string
     */
    @Processor
    public String SendMessage(String content,String no)
    {
    	String data = "";
    	 String result="";
    	try{
    	 data += "username=" + URLEncoder.encode(this.Uname, "ISO-8859-1");
         data += "&password=" + URLEncoder.encode(this.Pass, "ISO-8859-1");
         data += "&message=" + URLEncoder.encode(content, "ISO-8859-1");
         data += "&want_report=1";
         data += "&msisdn="+no;
         URL url = new URL(this.URL);
         URLConnection conn = url.openConnection();
         conn.setDoOutput(true);
         OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
         wr.write(data);
         wr.flush();

         // Get the response
         BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
         String line;
        
         while ((line = rd.readLine()) != null) {
             // Print the response output...
             System.out.println(line);
             result=result+line;
         }
         wr.close();
         rd.close();
    	}
    	catch(Exception E){
    		
    	}

        return result;
    }
}
